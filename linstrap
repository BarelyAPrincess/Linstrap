#!/bin/bash
#
##############################################################################
##  This software may be modified and distributed under the terms
##  of the MIT license.  See the LICENSE file for details.
##
##  Unless required by applicable law or agreed to in writing,
##  software distributed under the License is distributed on an
##  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
##  KIND, either express or implied.  See the License for the
##  specific language governing permissions and limitations
##  under the License.
##
##  Copyright (c) 2021 Amelia Sara Greene <barelyaprincess@gmail.com>
##  Copyright (c) 2021 Penoaks Publishing LLC <development@penoaks.com>
##
##  Linstrap: Linux OS Bootstrapping and Launcher for UN*X
##############################################################################

## Prevent script from being source'd
if [ "$0" == "*bash" || "$0" == "*sh" ]; then
    /bin/bash `realpath $0`
    return $?
fi

## TODO Check the script is being executed with bash, sh will have compatibility issues.

## Specifies what function will be executed
FUNCTION=${1:-launch}

# Attempt to set LINSTRAP_HOME
if [ $LINSTRAP_HOME ]; then
    VERIFY_MSG="The LINSTRAP_DIR variable points to an invalid target:\n\"`realpath $LINSTRAP_HOME`\"\nPlease verify this location and try again."
else
    # Resolve links: $0 may be a link
    PRG="$0"
    # Need this for relative symlinks.
    while [ -h "$PRG" ] ; do
        ls=`ls -ld "$PRG"`
        link=`expr "$ls" : '.*-> \(.*\)$'`
        if expr "$link" : '/.*' > /dev/null; then
            PRG="$link"
        else
            PRG=`dirname "$PRG"`"/$link"
        fi
    done
    SAVED="`pwd`"
    cd "`dirname \"$PRG\"`/" >/dev/null
    LINSTRAP_HOME="`pwd -P`"
    cd "$SAVED" >/dev/null

    VERIFY_MSG="The Linstrap home directory was auto detected as:\n\"$LINSTRAP_HOME\"\nPlease verify that the script is located in the real root directory\nor you can manually set the directory with the LINSTRAP_HOME veriable."
fi

## Init Directories Locations
## TODO Allow linstrap home to be specified as an argument, the home could also be a directory on an external USB device
[ $LINSTRAP_ROOT ] && LINSTRAP_ROOT=$(realpath "$LINSTRAP_ROOT") || LINSTRAP_ROOT=$(realpath "${0%/*}")
LINSTRAP_CHROOT="$LINSTRAP_ROOT/data"
LINSTRAP_HOME="$LINSTRAP_CHROOT/linstrap"
LINSTRAP_SCRIPTS="$LINSTRAP_HOME/scripts"

error() {
	echo "SEVERE ERROR! ${@}${LINSTRAP_ERROR_APPEND}"
	exit 1
}

## Override the echo function
echo() {
	builtin echo -e "${@}"
}

check_dir() {
	if [ ! -d "$1" ]; then
		## TODO If something is missing, ask to create it?
		error "\nyes... :( The$2 directory \"$1\" does not exist!"
	fi
}

include_script() {
	if [ -f "${LINSTRAP_SCRIPTS}/${1}" ]; then
		source "${LINSTRAP_SCRIPTS}/${1}"
	else
		error "The script \"${1}\" was not found in the scripts directory. $(var_dump LINSTRAP_SCRIPTS)"
	fi
}

## Init Variables
LINSTRAP_ERROR_APPEND="\n  Please consider providing feedback and/or contributing to this project at https://github.com/PenoaksDev/Linstrap"
LINSTRAP_VERSION="1.0"
LINSTRAP_TITLE="Welcome to the Linux OS Bootstraping and Launcher Utility v$LINSTRAP_VERSION"
LINSTRAP_AUTHOR="Created by Amelia S. Greene (BarelyAPrincess)"

## XXX /bin/sh does not have a declare? We seriously might want to see about using python, perl, or php instead of shell scripts.
declare -l FUNCTION ## Make lowercase

check_dir $LINSTRAP_CHROOT " Linstrap chroot"

include_script "env"
include_script "func"

startup() {
	include_script "header"

	echo "Checking Environment..."
	echo
	echo -n "  Is host arch X86_64? "
	ARCH=`uname -m`
	[ ${ARCH} == "x86_64" ] || error "Nope! Only X86_64 is supported at this moment."
	echo "Yes!"

	echo -n "  Running as root? "
	[ `whoami` == "root" ] || error "Nope! This script can only be ran as root at this moment due to its use of 'chroot'. Support for 'fakechroot' will be added later.$LINSTRAP_ERROR_APPEND"
	echo "Yes!"

	echo -n "  Is the home directory \"$LINSTRAP_HOME\" missing any files or directories? "
	check_dir "$LINSTRAP_HOME"
	check_dir "$LINSTRAP_SCRIPTS"
	echo " Nope! :P"

	echo -n "  Is all the expected environment variables set? "
	check_var CHROOT
	check_var LINSTRAP_ROOT
	check_var LINSTRAP_CHROOT
	echo " Yes!"

	echo
}

launch() {
	for LOC in $(ls ${LINSTRAP_HOME}/scripts/chroot-pre-* 2>/dev/null); do
		test -f "$LOC" && source $LOC
	done

	## Add message that if the init system fails to launch, the suggestion to use git to reset can be presented.

	echo "Everything checks out! Now launching Linstrap chroot located at \"${LINSTRAP_CHROOT}\"..."
	echo
	$CHROOT "${LINSTRAP_CHROOT}" $1

	for LOC in $(ls ${LINSTRAP_HOME}/scripts/chroot-post-* 2>/dev/null); do
		test -f "$LOC" && source $LOC
	done
}

case $FUNCTION in
	"launch" )
		startup
		launch /linstrap/launch
		;;
	"enter" )
		startup
		launch /bin/sh
		;;
	"update" )
		startup
		echo "Updating Linstrap from GIT repository. Make sure GIT is installed."
		git pull
		;;
	"install" )
		## TODO Will copy self to an external thumb drive and optionally generate the initrd and grub config.
		error "Not Implemented"
		;;
	"help" | "usage" )
		echo "${0} [launch|enter|update|install|help] [options]"
		;;
	* )
		error "The function \"$FUNCTION\" is not recognized. The default function is 'launch' or try using the 'help' function for a list of accepted functions."
		;;
esac

exit 0
